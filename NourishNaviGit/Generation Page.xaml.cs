using static Microsoft.Maui.ApplicationModel.Permissions;
using System.Diagnostics;
using System.Reflection;
using ChatGptNet;
using ChatGptNet.Models;

namespace NourishNaviGit;
public partial class GenerationPage : ContentPage
{
    public GenerationPage(string generatedPrompt)
    {
        InitializeComponent();
        _chatGptClient = Handler.MauiContext.Services.GetService<IChatGptClient>();
        if (_chatGptClient == null)
        {
            // Handle the case where _chatGptClient is not initialized
            GeneratedResponseTextBlock.Text = "Chat client not initialized.";
        }

        // Display the generated prompt -- CASSIE
        GeneratedPromptTextBlock.Text = generatedPrompt;
       

        // storedPrompt will = prompt generated by previous page. maybe store in database and call from there?
        // or is there a POST method or something similar?

        // test prompt value - in practice will retrieve string of full prompt and pass into functions here for chatgptnet
        

    }

    private IChatGptClient _chatGptClient;
    
    private async void OnConfirmClicked(object sender, EventArgs e)
    {
        await GetRecommendation(GeneratedPromptTextBlock.Text); // Pass the generated prompt text
    }

    // retrieves chatgpt response
    private async Task GetRecommendation(string promptFull)
    {

        // hopefully research more on exactly what this block is, tutorial suggests its important but doesnt specify what it does.
        if (_sessionGuid == Guid.Empty)
        {
            _sessionGuid = Guid.NewGuid();
        }

        // ask chatgpt using the full prompt generated by PromptGenerator
        ChatGptResponse response = await _chatGptClient.AskAsync(_sessionGuid,
                                    promptFull);
    

        // print it out in the specified page element
       GeneratedResponseTextBlock.Text = response.GetContent();
    }

    private Guid _sessionGuid = Guid.Empty;
}