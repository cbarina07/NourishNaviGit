using static Microsoft.Maui.ApplicationModel.Permissions;
using System.Diagnostics;
using System.Reflection;
using ChatGptNet;
using ChatGptNet.Models;

namespace NourishNaviGit;
public partial class GenerationPage : ContentPage
{
    // storedPrompt will = prompt generated by previous page. maybe store in database and call from there?
    // or is there a POST method or something similar?

    // test prompt value - in practice will retrieve string of full prompt and pass into functions here for chatgptnet
    string storedPrompt = "Tell me a story";

    private IChatGptClient _chatGptClient;
    public void Generation_Page()
    {
        InitializeComponent();
        // this object/class loaded = triggers generationpage_loaded function
        this.Loaded += GenerationPage_Loaded;
    }

    // initiates chatgptclient
    private void GenerationPage_Loaded(object sender, EventArgs e)
    {
        _chatGptClient = Handler.MauiContext.Services.GetService<IChatGptClient>();
    }

    // function to call chatgpt response on 'Confirm' button clicked
    private async void OnConfirmClicked(object sender, EventArgs e)
    {
        await GetRecommendation(storedPrompt);
    }

    // retrieves chatgpt response
    private async Task GetRecommendation(string promptFull)
    {

        // hopefully research more on exactly what this block is, tutorial suggests its important but doesnt specify what it does.
        if (_sessionGuid == Guid.Empty)
        {
            _sessionGuid = Guid.NewGuid();
        }

        // ask chatgpt using the full prompt generated by PromptGenerator
        ChatGptResponse response = await _chatGptClient.AskAsync(_sessionGuid,
                                    promptFull);

        // print it out in the specified page element
        GeneratedResponseTextBlock.Text = response.GetContent();
    }

    private Guid _sessionGuid = Guid.Empty;
}