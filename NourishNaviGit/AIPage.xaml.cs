using static Microsoft.Maui.ApplicationModel.Permissions;
using System.Diagnostics;
using System.Reflection;
using ChatGptNet;
using ChatGptNet.Models;
using Azure;
using MySql.Data.MySqlClient;
using MySqlX.XDevAPI;
using System.Runtime.CompilerServices;
using Microsoft.EntityFrameworkCore.Migrations.Operations;

namespace NourishNaviGit
{
    public partial class AIPage : ContentPage
    {
        private IChatGptClient _chatGptClient;
        private Guid _sessionGuid = Guid.Empty;

        public AIPage(string aiResponse)
        {
            InitializeComponent();

            this.Loaded += AIPage_Loaded;
            // Display the AI response in the UI
            GeneratedResponseTextBlock.Text = aiResponse;
        }

        public class SharedDataService
        {
            public string PromptToUse { get; set; }
        }

        private void InitializeChatGptClient()
        {
            _chatGptClient = Handler.MauiContext.Services.GetService<IChatGptClient>();
        }

        private void AIPage_Loaded(object sender, EventArgs e)
        {
            InitializeChatGptClient();

            if (_chatGptClient == null)
            {
                // Handle the case where _chatGptClient is not initialized
                client.Text = "Chat client not initialized.";
            }
        }

        private async Task<string> GetIngredients(string promptIngredients)
        {
            if (_sessionGuid == Guid.Empty)
            {
                _sessionGuid = Guid.NewGuid();
            }

            // Ask chatgpt using the full prompt generated by PromptGenerator
            ChatGptResponse newResponse = await _chatGptClient.AskAsync(_sessionGuid, promptIngredients);

            // Return the response content as a string
            return newResponse.GetContent();
        }

        protected async override void OnAppearing()
        {
            base.OnAppearing();
            await Task.Delay(100);
            ingredients.IsAnimationPlaying = true;
        }

        private async void OnShowIngredientsBtnClicked(object sender, EventArgs e)
        {
            string ingredientsPrompt = "Please return to me a list of ingredients for this menu in alphabetical making sure to take note of the user details. Do not include anything I am allergic to or dislike." + GeneratedResponseTextBlock.Text;
            
                  
            GeneratedResponseTextBlock.IsVisible = false;

            ShowIngredients.IsVisible = false;


            ingredients.IsVisible = true;
            // Call the method to get the AI response here
            string aiNewResponse = await GetIngredients(ingredientsPrompt);

            

            GeneratedIngredientsTextBlock.Text = aiNewResponse;

            GeneratedIngredientsTextBlock.IsVisible = true;

            ingredients.IsVisible = false;
        }

        private async void OnHomeBtnClicked(object sender, EventArgs e)
        {
            await Navigation.PushAsync(new HomePage());
        }
    }
}